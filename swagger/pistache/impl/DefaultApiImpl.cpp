/**
* Example
* Example REST Endpoint.
*
* OpenAPI spec version: 2.3.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/

#include "DefaultApiImpl.h"

namespace io {
namespace swagger {
namespace server {
namespace api {

//using namespace io::swagger::server::model;

DefaultApiImpl::DefaultApiImpl(Pistache::Address addr)
    : DefaultApi(addr)
    { }

void DefaultApiImpl::parameter1_get(const std::string &parameter1, Pistache::Http::ResponseWriter &response) {
	response.send(Pistache::Http::Code::Ok, "Hello, "+parameter1+"!");
}
void DefaultApiImpl::parameter1_parameter2_get(const std::string &parameter1, const std::string &parameter2, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void DefaultApiImpl::parameter1_parameter2_parameter3_get(const std::string &parameter1, const std::string &parameter2, const std::string &parameter3, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void DefaultApiImpl::parameter1_parameter2_parameter3_parameter4_get(const std::string &parameter1, const std::string &parameter2, const std::string &parameter3, const std::string &parameter4, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

